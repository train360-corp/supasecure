name: release

on:
  push:
    tags:
      - "v*.*.*"  # Matches v1.0.0, v2.3.4, etc.

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    name: Build CLI
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout main repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fix Linux service file version
        run: |
          sed -i "s/v0\.0\.0/${GITHUB_REF_NAME}/g" cli/internal/cli/utils/installers/linux/supasecure.service
          cat cli/internal/cli/utils/installers/linux/supasecure.service

      - uses: actions/setup-go@v5

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        id: goreleaser
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean --skip=validate
          workdir: './cli'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_REPO_SECRET: ${{ secrets.HOMEBREW_TAP_REPO_SECRET }}

      - name: Extract Linux Package Artifacts
        id: extract
        run: |
          echo "linux_packages=$(echo '${{ steps.goreleaser.outputs.artifacts }}' | jq -c '[.[] | select(.type == "Linux Package")]')" >> "$GITHUB_OUTPUT"

      - name: Checkout PPA repository
        uses: actions/checkout@v4
        with:
          repository: train360-corp/ppa
          token: ${{ secrets.PPA_TOKEN }}
          path: ppa-repo

      - name: Ensure packages folder exists and copy Linux packages
        run: |
          mkdir -p ppa-repo/packages
          packages=$(echo '${{ steps.extract.outputs.linux_packages }}' | jq -r '.[] | @base64')

          for pkg in $packages; do
            _jq() {
              echo "$pkg" | base64 --decode | jq -r "$1"
            }

            path=$(_jq '.path')
            name=$(_jq '.name')

            src_path="cli/$path"
            dest_path="ppa-repo/packages/$name"

            echo "Copying $src_path to $dest_path"
            cp "$src_path" "$dest_path"
          done
          
          ppa-repo/update.sh
        env:
          KEY: ${{ secrets.KEY }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7.0.8
        with:
          token: ${{ secrets.PPA_TOKEN }}
          path: ppa-repo
          title: 'feat: supasecure release ${{ github.ref_name }}'
          body: |
            This PR adds the Linux packages for `supasecure` version `${{ github.ref_name }}` generated by GoReleaser.
            
            Triggered by commit: ${{ github.sha }}
          branch: 'supasecure-${{ github.ref_name }}'
          base: 'main'
          commit-message: 'chore: add supasecure Linux packages for ${{ github.ref_name }}'
          draft: false

  dockerize:
    name: Dockerize
    runs-on: ubuntu-24.04
    needs: goreleaser
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract tag
        id: get_tag
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/train360-corp/supasecure
          tags: |
            type=raw,value=${{ env.TAG }}
            type=sha,prefix=,format=short
            type=raw,value=latest

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  types:
    name: Generate Type-Libraries
    needs: goreleaser
    runs-on: ubuntu-24.04
    steps:

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq moreutils

      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - run: supabase db start

      - name: update package.json version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          jq --arg VERSION "$VERSION" '.version = $VERSION' ./types/typescript/package.json | sponge ./types/typescript/package.json

      - run: cd ./types/typescript && npm i

      - name: Publish to npm
        run: cd ./types/typescript && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTOMATION_KEY }}
