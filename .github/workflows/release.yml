name: release

on:
  push:
    tags:
      - "v*.*.*"  # Matches v1.0.0, v2.3.4, etc.

permissions:
  contents: write
  packages: write

jobs:

  goreleaser:
    name: Build CLI
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
          workdir: './cli'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_REPO_SECRET: ${{ secrets.HOMEBREW_TAP_REPO_SECRET }}

  dockerize:
    name: Dockerize
    runs-on: ubuntu-24.04
    needs: goreleaser
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract tag
        id: get_tag
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/train360-corp/supasecure
          tags: |
            type=sha,prefix=,format=short
            type=raw,value=${{ env.TAG }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  types:
    name: Generate Type-Libraries
    needs: goreleaser
    runs-on: ubuntu-24.04
    steps:

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq moreutils

      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - run: supabase db start

      - name: update package.json version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          jq --arg VERSION "$VERSION" '.version = $VERSION' ./types/typescript/package.json | sponge ./types/typescript/package.json

      - run: cd ./types/typescript && npm i

      - name: Publish to npm
        run: cd ./types/typescript && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTOMATION_KEY }}
